
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// НачалоДоработки
	// Шишкин В.В. от 14.07.23

	//ДобавитьГруппуСогласованнаяСкидка
	ГруппаКоманды = Элементы.Добавить("ГруппаСогласованнаяСкидка",Тип("ГруппаФормы"),Элементы.ГруппаШапкаЛево);
	ГруппаКоманды.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаКоманды.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаКоманды.ОтображатьЗаголовок = Ложь;
	ГруппаКоманды.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	//ДобавитьПолеСогласованнаяСкидкаВГруппаСогласованнаяСкидка
	ПолеВвода = Элементы.Добавить("вш_СогласованнаяСкидка",Тип("ПолеФормы"),ГруппаКоманды);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.вш_СогласованнаяСкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении", "вш_СогласованнаяСкидкаПриИзменении");
	
	//СоздатьКомандуПересчитать
	НоваяКоманда = ЭтаФорма.Команды.Добавить("ОбщаяКоманда");
	НоваяКоманда.Заголовок = "Пересчитать";
	НоваяКоманда.Действие = "Пересчитать";
	
	//ДобавитьКомандуПересчитатьВГруппаСогласованнаяСкидка
	КнопкаПересчитать = Элементы.Добавить("Пересчитать", Тип("КнопкаФормы"),ГруппаКоманды);
	КнопкаПересчитать.Заголовок = "Пересчитать";
	КнопкаПересчитать.ИмяКоманды = "ОбщаяКоманда";
	
	//КонецДоработки
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// НачалоДоработки
	// Шишкин В.В. от 14.07.23
	// Изменение расчета суммы строки
	// Исходный код:
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	// ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	// Новый код:
	
	СуммаПервойСкидки = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (ТекущиеДанные.Скидка / 100);
	СуммаВторойСкидки = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (Объект.вш_СогласованнаяСкидка / 100);
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество - (СуммаПервойСкидки + СуммаВторойСкидки);
	Если ТекущиеДанные.Сумма < 0 Тогда
		ТекущиеДанные.Сумма = 0;
	КонецЕсли;
	
	// КонецДоработки
		
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

// НачалоДоработки
// Шишкин В.В. от 14.07.23
// Пересчет суммы строки при изменении согласованной скидки
&НаКлиенте
Процедура Пересчитать(Команда)
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Асинх Процедура вш_СогласованнаяСкидкаПриИзменении(Элемент)
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Ждать ВопросАсинх("Процент скидки изменен. Пересчитать таблицы товаров и услуг",Режим,0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Для Каждого Строка Из Объект.Товары Цикл
				РассчитатьСуммуСтроки(Строка);
			КонецЦикла;
			Для Каждого Строка Из Объект.Услуги Цикл
				РассчитатьСуммуСтроки(Строка);
			КонецЦикла;
		Иначе
			Возврат
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
